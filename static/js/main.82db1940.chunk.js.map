{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","titleText","goods","length","slice","join","selectGood","good","setState","prevState","removeGood","filter","selectedGood","this","className","type","onClick","goodsFromServer","map","classNames","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAAe,GACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,OCDWA,EAAb,4MACEC,MAAyB,CACvBC,cAAe,CAAC,QAFpB,EAKEC,UAAY,SAACC,GACX,QAAQ,GACN,KAAMA,EAAMC,OACV,MAAO,oBAET,KAAsB,IAAjBD,EAAMC,OACT,MAAM,GAAN,OAAUD,EAAM,GAAhB,gBAEF,KAAKA,EAAMC,OAAS,EAClB,MAAM,GAAN,OAAUD,EAAME,MAAM,GAAI,GAAGC,KAAK,MAAlC,gBAA+CH,EAAME,OAAO,GAA5D,iBAEF,QACE,MAAO,KAjBf,EAqBEE,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BT,cAAc,GAAD,mBAAMS,EAAUT,eAAhB,CAA+BO,SAvBlD,EA2BEG,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BT,cAAe,YAAIS,EAAUT,eAC1BW,QAAO,SAAAC,GAAY,OAAIL,IAASK,UA9BzC,4CAkCE,WAAU,IAAD,OACCZ,EAAkBa,KAAKd,MAAvBC,cAER,OACE,uBAAMc,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,wBAAd,SACGD,KAAKZ,UAAUD,KAGlB,wBACEe,KAAK,SACLD,UAAU,wCACVE,QAAS,WACP,EAAKR,SAAS,CAAER,cAAe,MAJnC,sBAWF,6BACGiB,EAAgBC,KAAI,SAAAX,GAAI,OACvB,qBAEEO,UAAWK,IACT,OACA,CACE,eAAgBnB,EAAcoB,SAASb,KAL7C,UASGA,EAEAP,EAAcoB,SAASb,GAEpB,wBACEQ,KAAK,SACLD,UAAU,+BACVE,QAAS,WACP,EAAKN,WAAWH,IAJpB,oBAUA,wBACEQ,KAAK,SACLD,UAAU,gCACVE,QAAS,WACP,EAAKV,WAAWC,IAJpB,sBAtBCA,eA1DnB,GAAyBc,IAAMC,WCN/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.82db1940.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGoods: string[],\n};\n\nexport class App extends React.Component<{ }, State> {\n  state: Readonly<State> = {\n    selectedGoods: ['Jam'],\n  };\n\n  titleText = (goods: string[] | []) => {\n    switch (true) {\n      case !goods.length:\n        return 'No goods selected';\n\n      case goods.length === 1:\n        return `${goods[0]} is selected`;\n\n      case goods.length > 1:\n        return `${goods.slice(0, -1).join(', ')} and ${goods.slice(-1)} are selected`;\n\n      default:\n        return '';\n    }\n  };\n\n  selectGood = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods]\n        .filter(selectedGood => good !== selectedGood),\n    }));\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title title is-2\">\n            {this.titleText(selectedGoods)}\n          </h1>\n\n          <button\n            type=\"button\"\n            className=\"App__clear button is-info is-outlined\"\n            onClick={() => {\n              this.setState({ selectedGoods: [] });\n            }}\n          >\n            Clear\n          </button>\n        </header>\n\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames(\n                'Good',\n                {\n                  'Good--active': selectedGoods.includes(good),\n                },\n              )}\n            >\n              {good}\n\n              {selectedGoods.includes(good)\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"button is-danger is-outlined\"\n                    onClick={() => {\n                      this.removeGood(good);\n                    }}\n                  >\n                    Remove\n                  </button>\n                ) : (\n                  <button\n                    type=\"button\"\n                    className=\"button is-primary is-outlined\"\n                    onClick={() => {\n                      this.selectGood(good);\n                    }}\n                  >\n                    Select\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}